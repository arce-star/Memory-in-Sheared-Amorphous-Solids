##########################################
                创建文件夹
##########################################

0..20 | ForEach-Object { New-Item -Name "轮次$_" -ItemType "Directory" }

####################################################
           分发in.shear并替换内容             
####################################################

# 复制 in.shear 到所有轮次文件夹，并自动修改其中的文件名
0..40 | ForEach-Object {
    $folder = "轮次$_"
    $dataFile = "sheared_oscillation_$_.data"
    
    # 复制 in.shear 到目标文件夹
    Copy-Item "in.shear" "$folder\"
    
    # 读取文件内容并替换
    $content = Get-Content "in.shear" -Raw
    
    # 替换数据文件名（注意转义特殊字符）
    $newContent = $content -replace "sheared_oscillation_1\.data", $dataFile
    
    # 将修改后的内容写回文件
    $newContent | Out-File -FilePath "$folder\in.shear" -Encoding utf8
    
    Write-Host "已处理: $folder - 使用数据文件: $dataFile" -ForegroundColor Green
}

Write-Host "所有文件夹的 in.shear 文件已配置完成！" -ForegroundColor Cyan

##########################################
            分发对应位形文件
##########################################

0..20 | ForEach-Object { 
    $source = "sheared_oscillation_$_.data"
    $destination = "轮次$_\\sheared_oscillation_$_.data"
    Move-Item $source $destination
}
Write-Host "所有文件已分发完成！" -ForegroundColor Green

##########################################
                进程监控
##########################################

# 保存为 simple_monitor.ps1
while ($true) {
    $cpu = (Get-Counter "\Processor(_Total)\% Processor Time").CounterSamples.CookedValue
    $mem = Get-CimInstance Win32_OperatingSystem
    $usedMemGB = [math]::Round(($mem.TotalVisibleMemorySize - $mem.FreePhysicalMemory)/1GB, 2)
    $lammpsCount = (Get-Process lmp_mpi -ErrorAction SilentlyContinue).Count
    
    Write-Host "[$(Get-Date -Format 'HH:mm:ss')] " -NoNewline -ForegroundColor Cyan
    Write-Host "CPU: $([math]::Round($cpu, 1))% " -NoNewline -ForegroundColor $(if ($cpu -gt 80) { "Red" } else { "Green" })
    Write-Host "MEM: ${usedMemGB}GB " -NoNewline -ForegroundColor $(if ($usedMemGB -gt 12) { "Red" } else { "Green" })
    Write-Host "LAMMPS: $lammpsCount/5 " -NoNewline -ForegroundColor $(if ($lammpsCount -eq 5) { "Green" } else { "Yellow" })
    Write-Host "|" -NoNewline -ForegroundColor White
    
    # 简单的进度条
    1..20 | ForEach-Object {
        if ($_ -le ($cpu/5)) {
            Write-Host "█" -NoNewline -ForegroundColor $(if ($cpu -gt 80) { "Red" } elseif ($cpu -gt 60) { "Yellow" } else { "Green" })
        } else {
            Write-Host "░" -NoNewline -ForegroundColor Gray
        }
    }
    
    Write-Host "|"
    Start-Sleep 2
}

############################################
            监测CPU占用情况
############################################

Get-Process | Sort-Object CPU -Descending | Select-Object -First 10 Name, CPU, WorkingSet, Id

